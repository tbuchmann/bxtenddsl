/**
 * generated by Xtext 2.16.0
 */
package de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.impl;

import de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.BXtendDSL;
import de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.BXtendDSLPackage;
import de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.Config;
import de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.Metamodels;
import de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.TransformationRule;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>BXtend DSL</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.impl.BXtendDSLImpl#getMetamodels <em>Metamodels</em>}</li>
 *   <li>{@link de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.impl.BXtendDSLImpl#getConfig <em>Config</em>}</li>
 *   <li>{@link de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.impl.BXtendDSLImpl#getRules <em>Rules</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BXtendDSLImpl extends MinimalEObjectImpl.Container implements BXtendDSL
{
  /**
   * The cached value of the '{@link #getMetamodels() <em>Metamodels</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetamodels()
   * @generated
   * @ordered
   */
  protected Metamodels metamodels;

  /**
   * The cached value of the '{@link #getConfig() <em>Config</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConfig()
   * @generated
   * @ordered
   */
  protected Config config;

  /**
   * The cached value of the '{@link #getRules() <em>Rules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRules()
   * @generated
   * @ordered
   */
  protected EList<TransformationRule> rules;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BXtendDSLImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BXtendDSLPackage.Literals.BXTEND_DSL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Metamodels getMetamodels()
  {
    return metamodels;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMetamodels(Metamodels newMetamodels, NotificationChain msgs)
  {
    Metamodels oldMetamodels = metamodels;
    metamodels = newMetamodels;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BXtendDSLPackage.BXTEND_DSL__METAMODELS, oldMetamodels, newMetamodels);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMetamodels(Metamodels newMetamodels)
  {
    if (newMetamodels != metamodels)
    {
      NotificationChain msgs = null;
      if (metamodels != null)
        msgs = ((InternalEObject)metamodels).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BXtendDSLPackage.BXTEND_DSL__METAMODELS, null, msgs);
      if (newMetamodels != null)
        msgs = ((InternalEObject)newMetamodels).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BXtendDSLPackage.BXTEND_DSL__METAMODELS, null, msgs);
      msgs = basicSetMetamodels(newMetamodels, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BXtendDSLPackage.BXTEND_DSL__METAMODELS, newMetamodels, newMetamodels));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Config getConfig()
  {
    return config;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConfig(Config newConfig, NotificationChain msgs)
  {
    Config oldConfig = config;
    config = newConfig;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BXtendDSLPackage.BXTEND_DSL__CONFIG, oldConfig, newConfig);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConfig(Config newConfig)
  {
    if (newConfig != config)
    {
      NotificationChain msgs = null;
      if (config != null)
        msgs = ((InternalEObject)config).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BXtendDSLPackage.BXTEND_DSL__CONFIG, null, msgs);
      if (newConfig != null)
        msgs = ((InternalEObject)newConfig).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BXtendDSLPackage.BXTEND_DSL__CONFIG, null, msgs);
      msgs = basicSetConfig(newConfig, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BXtendDSLPackage.BXTEND_DSL__CONFIG, newConfig, newConfig));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<TransformationRule> getRules()
  {
    if (rules == null)
    {
      rules = new EObjectContainmentEList<TransformationRule>(TransformationRule.class, this, BXtendDSLPackage.BXTEND_DSL__RULES);
    }
    return rules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BXtendDSLPackage.BXTEND_DSL__METAMODELS:
        return basicSetMetamodels(null, msgs);
      case BXtendDSLPackage.BXTEND_DSL__CONFIG:
        return basicSetConfig(null, msgs);
      case BXtendDSLPackage.BXTEND_DSL__RULES:
        return ((InternalEList<?>)getRules()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BXtendDSLPackage.BXTEND_DSL__METAMODELS:
        return getMetamodels();
      case BXtendDSLPackage.BXTEND_DSL__CONFIG:
        return getConfig();
      case BXtendDSLPackage.BXTEND_DSL__RULES:
        return getRules();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BXtendDSLPackage.BXTEND_DSL__METAMODELS:
        setMetamodels((Metamodels)newValue);
        return;
      case BXtendDSLPackage.BXTEND_DSL__CONFIG:
        setConfig((Config)newValue);
        return;
      case BXtendDSLPackage.BXTEND_DSL__RULES:
        getRules().clear();
        getRules().addAll((Collection<? extends TransformationRule>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BXtendDSLPackage.BXTEND_DSL__METAMODELS:
        setMetamodels((Metamodels)null);
        return;
      case BXtendDSLPackage.BXTEND_DSL__CONFIG:
        setConfig((Config)null);
        return;
      case BXtendDSLPackage.BXTEND_DSL__RULES:
        getRules().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BXtendDSLPackage.BXTEND_DSL__METAMODELS:
        return metamodels != null;
      case BXtendDSLPackage.BXTEND_DSL__CONFIG:
        return config != null;
      case BXtendDSLPackage.BXTEND_DSL__RULES:
        return rules != null && !rules.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //BXtendDSLImpl
