/**
 * generated by Xtext 2.16.0
 */
package de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.util;

import de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.BXtendDSLPackage
 * @generated
 */
public class BXtendDSLSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static BXtendDSLPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BXtendDSLSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = BXtendDSLPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case BXtendDSLPackage.BXTEND_DSL:
      {
        BXtendDSL bXtendDSL = (BXtendDSL)theEObject;
        T result = caseBXtendDSL(bXtendDSL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.METAMODELS:
      {
        Metamodels metamodels = (Metamodels)theEObject;
        T result = caseMetamodels(metamodels);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.CUSTOMIZED_ELEMENT:
      {
        CustomizedElement customizedElement = (CustomizedElement)theEObject;
        T result = caseCustomizedElement(customizedElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.CUSTOMIZED_GETTER:
      {
        CustomizedGetter customizedGetter = (CustomizedGetter)theEObject;
        T result = caseCustomizedGetter(customizedGetter);
        if (result == null) result = caseCustomizedElement(customizedGetter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.CUSTOMIZED_SETTER:
      {
        CustomizedSetter customizedSetter = (CustomizedSetter)theEObject;
        T result = caseCustomizedSetter(customizedSetter);
        if (result == null) result = caseCustomizedElement(customizedSetter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.CONFIG:
      {
        Config config = (Config)theEObject;
        T result = caseConfig(config);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.TRANSFORMATION_RULE:
      {
        TransformationRule transformationRule = (TransformationRule)theEObject;
        T result = caseTransformationRule(transformationRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.CLASS_MATCHER:
      {
        ClassMatcher classMatcher = (ClassMatcher)theEObject;
        T result = caseClassMatcher(classMatcher);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.SRC_CLASS_MATCHER:
      {
        SrcClassMatcher srcClassMatcher = (SrcClassMatcher)theEObject;
        T result = caseSrcClassMatcher(srcClassMatcher);
        if (result == null) result = caseClassMatcher(srcClassMatcher);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.TRG_CLASS_MATCHER:
      {
        TrgClassMatcher trgClassMatcher = (TrgClassMatcher)theEObject;
        T result = caseTrgClassMatcher(trgClassMatcher);
        if (result == null) result = caseClassMatcher(trgClassMatcher);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.CLASS_MATCHER_MODIFIER:
      {
        ClassMatcherModifier classMatcherModifier = (ClassMatcherModifier)theEObject;
        T result = caseClassMatcherModifier(classMatcherModifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.FEATURE_MAPPING:
      {
        FeatureMapping featureMapping = (FeatureMapping)theEObject;
        T result = caseFeatureMapping(featureMapping);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.MAPPING_FEATURE:
      {
        MappingFeature mappingFeature = (MappingFeature)theEObject;
        T result = caseMappingFeature(mappingFeature);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.SRC_MAPPING_FEATURE:
      {
        SrcMappingFeature srcMappingFeature = (SrcMappingFeature)theEObject;
        T result = caseSrcMappingFeature(srcMappingFeature);
        if (result == null) result = caseMappingFeature(srcMappingFeature);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.TRG_MAPPING_FEATURE:
      {
        TrgMappingFeature trgMappingFeature = (TrgMappingFeature)theEObject;
        T result = caseTrgMappingFeature(trgMappingFeature);
        if (result == null) result = caseMappingFeature(trgMappingFeature);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BXtendDSLPackage.CORRESPONDENCE:
      {
        Correspondence correspondence = (Correspondence)theEObject;
        T result = caseCorrespondence(correspondence);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BXtend DSL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BXtend DSL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBXtendDSL(BXtendDSL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metamodels</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metamodels</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetamodels(Metamodels object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Customized Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Customized Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomizedElement(CustomizedElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Customized Getter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Customized Getter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomizedGetter(CustomizedGetter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Customized Setter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Customized Setter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomizedSetter(CustomizedSetter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Config</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Config</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfig(Config object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transformation Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transformation Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransformationRule(TransformationRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Class Matcher</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Class Matcher</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClassMatcher(ClassMatcher object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Src Class Matcher</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Src Class Matcher</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSrcClassMatcher(SrcClassMatcher object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Trg Class Matcher</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Trg Class Matcher</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTrgClassMatcher(TrgClassMatcher object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Class Matcher Modifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Class Matcher Modifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClassMatcherModifier(ClassMatcherModifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Feature Mapping</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Feature Mapping</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFeatureMapping(FeatureMapping object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mapping Feature</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mapping Feature</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMappingFeature(MappingFeature object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Src Mapping Feature</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Src Mapping Feature</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSrcMappingFeature(SrcMappingFeature object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Trg Mapping Feature</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Trg Mapping Feature</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTrgMappingFeature(TrgMappingFeature object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Correspondence</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Correspondence</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCorrespondence(Correspondence object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //BXtendDSLSwitch
