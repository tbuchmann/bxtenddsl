/**
 * generated by Xtext 2.16.0
 */
package de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.impl;

import de.ubt.ai1.m2m.bxtenddsl.bXtendDSL.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EDataType;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BXtendDSLFactoryImpl extends EFactoryImpl implements BXtendDSLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static BXtendDSLFactory init()
  {
    try
    {
      BXtendDSLFactory theBXtendDSLFactory = (BXtendDSLFactory)EPackage.Registry.INSTANCE.getEFactory(BXtendDSLPackage.eNS_URI);
      if (theBXtendDSLFactory != null)
      {
        return theBXtendDSLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new BXtendDSLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BXtendDSLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case BXtendDSLPackage.BXTEND_DSL: return createBXtendDSL();
      case BXtendDSLPackage.METAMODELS: return createMetamodels();
      case BXtendDSLPackage.CUSTOMIZED_ELEMENT: return createCustomizedElement();
      case BXtendDSLPackage.CUSTOMIZED_GETTER: return createCustomizedGetter();
      case BXtendDSLPackage.CUSTOMIZED_SETTER: return createCustomizedSetter();
      case BXtendDSLPackage.CONFIG: return createConfig();
      case BXtendDSLPackage.TRANSFORMATION_RULE: return createTransformationRule();
      case BXtendDSLPackage.CLASS_MATCHER: return createClassMatcher();
      case BXtendDSLPackage.SRC_CLASS_MATCHER: return createSrcClassMatcher();
      case BXtendDSLPackage.TRG_CLASS_MATCHER: return createTrgClassMatcher();
      case BXtendDSLPackage.CLASS_MATCHER_MODIFIER: return createClassMatcherModifier();
      case BXtendDSLPackage.FEATURE_MAPPING: return createFeatureMapping();
      case BXtendDSLPackage.MAPPING_FEATURE: return createMappingFeature();
      case BXtendDSLPackage.SRC_MAPPING_FEATURE: return createSrcMappingFeature();
      case BXtendDSLPackage.TRG_MAPPING_FEATURE: return createTrgMappingFeature();
      case BXtendDSLPackage.CORRESPONDENCE: return createCorrespondence();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object createFromString(EDataType eDataType, String initialValue)
  {
    switch (eDataType.getClassifierID())
    {
      case BXtendDSLPackage.DIRECTION:
        return createDirectionFromString(eDataType, initialValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String convertToString(EDataType eDataType, Object instanceValue)
  {
    switch (eDataType.getClassifierID())
    {
      case BXtendDSLPackage.DIRECTION:
        return convertDirectionToString(eDataType, instanceValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BXtendDSL createBXtendDSL()
  {
    BXtendDSLImpl bXtendDSL = new BXtendDSLImpl();
    return bXtendDSL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Metamodels createMetamodels()
  {
    MetamodelsImpl metamodels = new MetamodelsImpl();
    return metamodels;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CustomizedElement createCustomizedElement()
  {
    CustomizedElementImpl customizedElement = new CustomizedElementImpl();
    return customizedElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CustomizedGetter createCustomizedGetter()
  {
    CustomizedGetterImpl customizedGetter = new CustomizedGetterImpl();
    return customizedGetter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CustomizedSetter createCustomizedSetter()
  {
    CustomizedSetterImpl customizedSetter = new CustomizedSetterImpl();
    return customizedSetter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Config createConfig()
  {
    ConfigImpl config = new ConfigImpl();
    return config;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TransformationRule createTransformationRule()
  {
    TransformationRuleImpl transformationRule = new TransformationRuleImpl();
    return transformationRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClassMatcher createClassMatcher()
  {
    ClassMatcherImpl classMatcher = new ClassMatcherImpl();
    return classMatcher;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SrcClassMatcher createSrcClassMatcher()
  {
    SrcClassMatcherImpl srcClassMatcher = new SrcClassMatcherImpl();
    return srcClassMatcher;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TrgClassMatcher createTrgClassMatcher()
  {
    TrgClassMatcherImpl trgClassMatcher = new TrgClassMatcherImpl();
    return trgClassMatcher;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClassMatcherModifier createClassMatcherModifier()
  {
    ClassMatcherModifierImpl classMatcherModifier = new ClassMatcherModifierImpl();
    return classMatcherModifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FeatureMapping createFeatureMapping()
  {
    FeatureMappingImpl featureMapping = new FeatureMappingImpl();
    return featureMapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MappingFeature createMappingFeature()
  {
    MappingFeatureImpl mappingFeature = new MappingFeatureImpl();
    return mappingFeature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SrcMappingFeature createSrcMappingFeature()
  {
    SrcMappingFeatureImpl srcMappingFeature = new SrcMappingFeatureImpl();
    return srcMappingFeature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TrgMappingFeature createTrgMappingFeature()
  {
    TrgMappingFeatureImpl trgMappingFeature = new TrgMappingFeatureImpl();
    return trgMappingFeature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Correspondence createCorrespondence()
  {
    CorrespondenceImpl correspondence = new CorrespondenceImpl();
    return correspondence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Direction createDirectionFromString(EDataType eDataType, String initialValue)
  {
    Direction result = Direction.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertDirectionToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BXtendDSLPackage getBXtendDSLPackage()
  {
    return (BXtendDSLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static BXtendDSLPackage getPackage()
  {
    return BXtendDSLPackage.eINSTANCE;
  }

} //BXtendDSLFactoryImpl
