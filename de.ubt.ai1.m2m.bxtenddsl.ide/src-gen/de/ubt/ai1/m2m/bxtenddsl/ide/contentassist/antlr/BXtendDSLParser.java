/*
 * generated by Xtext 2.16.0
 */
package de.ubt.ai1.m2m.bxtenddsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.ubt.ai1.m2m.bxtenddsl.ide.contentassist.antlr.internal.InternalBXtendDSLParser;
import de.ubt.ai1.m2m.bxtenddsl.services.BXtendDSLGrammarAccess;
import java.util.Map;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.TokenSource;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class BXtendDSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(BXtendDSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, BXtendDSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getCustomizedElementAccess().getAlternatives(), "rule__CustomizedElement__Alternatives");
			builder.put(grammarAccess.getClassMatcherAccess().getAlternatives(), "rule__ClassMatcher__Alternatives");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getAlternatives_1(), "rule__ClassMatcherModifier__Alternatives_1");
			builder.put(grammarAccess.getFeatureMappingAccess().getAlternatives_0(), "rule__FeatureMapping__Alternatives_0");
			builder.put(grammarAccess.getFeatureMappingAccess().getAlternatives_2(), "rule__FeatureMapping__Alternatives_2");
			builder.put(grammarAccess.getMappingFeatureAccess().getAlternatives(), "rule__MappingFeature__Alternatives");
			builder.put(grammarAccess.getSrcMappingFeatureAccess().getAlternatives(), "rule__SrcMappingFeature__Alternatives");
			builder.put(grammarAccess.getTrgMappingFeatureAccess().getAlternatives(), "rule__TrgMappingFeature__Alternatives");
			builder.put(grammarAccess.getDirectionAccess().getAlternatives(), "rule__Direction__Alternatives");
			builder.put(grammarAccess.getBXtendDSLAccess().getGroup(), "rule__BXtendDSL__Group__0");
			builder.put(grammarAccess.getMetamodelsAccess().getGroup(), "rule__Metamodels__Group__0");
			builder.put(grammarAccess.getMetamodelsAccess().getGroup_2(), "rule__Metamodels__Group_2__0");
			builder.put(grammarAccess.getMetamodelsAccess().getGroup_5(), "rule__Metamodels__Group_5__0");
			builder.put(grammarAccess.getCustomizedGetterAccess().getGroup(), "rule__CustomizedGetter__Group__0");
			builder.put(grammarAccess.getCustomizedSetterAccess().getGroup(), "rule__CustomizedSetter__Group__0");
			builder.put(grammarAccess.getConfigAccess().getGroup(), "rule__Config__Group__0");
			builder.put(grammarAccess.getConfigAccess().getGroup_1(), "rule__Config__Group_1__0");
			builder.put(grammarAccess.getTransformationRuleAccess().getGroup(), "rule__TransformationRule__Group__0");
			builder.put(grammarAccess.getTransformationRuleAccess().getGroup_5(), "rule__TransformationRule__Group_5__0");
			builder.put(grammarAccess.getTransformationRuleAccess().getGroup_8(), "rule__TransformationRule__Group_8__0");
			builder.put(grammarAccess.getSrcClassMatcherAccess().getGroup(), "rule__SrcClassMatcher__Group__0");
			builder.put(grammarAccess.getTrgClassMatcherAccess().getGroup(), "rule__TrgClassMatcher__Group__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup(), "rule__ClassMatcherModifier__Group__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_0(), "rule__ClassMatcherModifier__Group_1_0__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_0_1_0(), "rule__ClassMatcherModifier__Group_1_0_1_0__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_0_1_1(), "rule__ClassMatcherModifier__Group_1_0_1_1__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_0_1_2(), "rule__ClassMatcherModifier__Group_1_0_1_2__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_0_1_3(), "rule__ClassMatcherModifier__Group_1_0_1_3__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_1(), "rule__ClassMatcherModifier__Group_1_1__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_1_1_0(), "rule__ClassMatcherModifier__Group_1_1_1_0__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_1_1_1(), "rule__ClassMatcherModifier__Group_1_1_1_1__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_1_1_2(), "rule__ClassMatcherModifier__Group_1_1_1_2__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_1_1_3(), "rule__ClassMatcherModifier__Group_1_1_1_3__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_2(), "rule__ClassMatcherModifier__Group_1_2__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_2_1_0(), "rule__ClassMatcherModifier__Group_1_2_1_0__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_2_1_1(), "rule__ClassMatcherModifier__Group_1_2_1_1__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_2_1_2(), "rule__ClassMatcherModifier__Group_1_2_1_2__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_2_1_3(), "rule__ClassMatcherModifier__Group_1_2_1_3__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_3(), "rule__ClassMatcherModifier__Group_1_3__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_3_1_0(), "rule__ClassMatcherModifier__Group_1_3_1_0__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_3_1_1(), "rule__ClassMatcherModifier__Group_1_3_1_1__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_3_1_2(), "rule__ClassMatcherModifier__Group_1_3_1_2__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_3_1_3(), "rule__ClassMatcherModifier__Group_1_3_1_3__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_4(), "rule__ClassMatcherModifier__Group_1_4__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_4_1_0(), "rule__ClassMatcherModifier__Group_1_4_1_0__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_4_1_1(), "rule__ClassMatcherModifier__Group_1_4_1_1__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_4_1_2(), "rule__ClassMatcherModifier__Group_1_4_1_2__0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroup_1_4_1_3(), "rule__ClassMatcherModifier__Group_1_4_1_3__0");
			builder.put(grammarAccess.getFeatureMappingAccess().getGroup(), "rule__FeatureMapping__Group__0");
			builder.put(grammarAccess.getSrcMappingFeatureAccess().getGroup_1(), "rule__SrcMappingFeature__Group_1__0");
			builder.put(grammarAccess.getSrcMappingFeatureAccess().getGroup_1_4(), "rule__SrcMappingFeature__Group_1_4__0");
			builder.put(grammarAccess.getTrgMappingFeatureAccess().getGroup_1(), "rule__TrgMappingFeature__Group_1__0");
			builder.put(grammarAccess.getTrgMappingFeatureAccess().getGroup_1_4(), "rule__TrgMappingFeature__Group_1_4__0");
			builder.put(grammarAccess.getCorrespondenceAccess().getGroup(), "rule__Correspondence__Group__0");
			builder.put(grammarAccess.getCorrespondenceAccess().getGroup_1(), "rule__Correspondence__Group_1__0");
			builder.put(grammarAccess.getCorrespondenceAccess().getGroup_1_2(), "rule__Correspondence__Group_1_2__0");
			builder.put(grammarAccess.getFeatureAccessAccess().getGroup(), "rule__FeatureAccess__Group__0");
			builder.put(grammarAccess.getFeatureAccessAccess().getGroup_1(), "rule__FeatureAccess__Group_1__0");
			builder.put(grammarAccess.getBXtendDSLAccess().getMetamodelsAssignment_0(), "rule__BXtendDSL__MetamodelsAssignment_0");
			builder.put(grammarAccess.getBXtendDSLAccess().getConfigAssignment_1(), "rule__BXtendDSL__ConfigAssignment_1");
			builder.put(grammarAccess.getBXtendDSLAccess().getRulesAssignment_2(), "rule__BXtendDSL__RulesAssignment_2");
			builder.put(grammarAccess.getMetamodelsAccess().getSourcemodelAssignment_1(), "rule__Metamodels__SourcemodelAssignment_1");
			builder.put(grammarAccess.getMetamodelsAccess().getCustomizedSrcElementsAssignment_2_1(), "rule__Metamodels__CustomizedSrcElementsAssignment_2_1");
			builder.put(grammarAccess.getMetamodelsAccess().getTargetmodelAssignment_4(), "rule__Metamodels__TargetmodelAssignment_4");
			builder.put(grammarAccess.getMetamodelsAccess().getCustomizedTrgElementsAssignment_5_1(), "rule__Metamodels__CustomizedTrgElementsAssignment_5_1");
			builder.put(grammarAccess.getCustomizedGetterAccess().getElementAssignment_1(), "rule__CustomizedGetter__ElementAssignment_1");
			builder.put(grammarAccess.getCustomizedGetterAccess().getCustomIdAssignment_3(), "rule__CustomizedGetter__CustomIdAssignment_3");
			builder.put(grammarAccess.getCustomizedSetterAccess().getElementAssignment_1(), "rule__CustomizedSetter__ElementAssignment_1");
			builder.put(grammarAccess.getCustomizedSetterAccess().getCustomIdAssignment_3(), "rule__CustomizedSetter__CustomIdAssignment_3");
			builder.put(grammarAccess.getConfigAccess().getOptionsAssignment_1_2(), "rule__Config__OptionsAssignment_1_2");
			builder.put(grammarAccess.getTransformationRuleAccess().getNameAssignment_1(), "rule__TransformationRule__NameAssignment_1");
			builder.put(grammarAccess.getTransformationRuleAccess().getSrcMatcherAssignment_4(), "rule__TransformationRule__SrcMatcherAssignment_4");
			builder.put(grammarAccess.getTransformationRuleAccess().getSrcMatcherAssignment_5_1(), "rule__TransformationRule__SrcMatcherAssignment_5_1");
			builder.put(grammarAccess.getTransformationRuleAccess().getTrgMatcherAssignment_7(), "rule__TransformationRule__TrgMatcherAssignment_7");
			builder.put(grammarAccess.getTransformationRuleAccess().getTrgMatcherAssignment_8_1(), "rule__TransformationRule__TrgMatcherAssignment_8_1");
			builder.put(grammarAccess.getTransformationRuleAccess().getMappingsAssignment_9(), "rule__TransformationRule__MappingsAssignment_9");
			builder.put(grammarAccess.getSrcClassMatcherAccess().getClazzAssignment_0(), "rule__SrcClassMatcher__ClazzAssignment_0");
			builder.put(grammarAccess.getSrcClassMatcherAccess().getNameAssignment_1(), "rule__SrcClassMatcher__NameAssignment_1");
			builder.put(grammarAccess.getSrcClassMatcherAccess().getModifierAssignment_2(), "rule__SrcClassMatcher__ModifierAssignment_2");
			builder.put(grammarAccess.getTrgClassMatcherAccess().getClazzAssignment_0(), "rule__TrgClassMatcher__ClazzAssignment_0");
			builder.put(grammarAccess.getTrgClassMatcherAccess().getNameAssignment_1(), "rule__TrgClassMatcher__NameAssignment_1");
			builder.put(grammarAccess.getTrgClassMatcherAccess().getModifierAssignment_2(), "rule__TrgClassMatcher__ModifierAssignment_2");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getFilterAssignment_1_0_1_0_0(), "rule__ClassMatcherModifier__FilterAssignment_1_0_1_0_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getSortAssignment_1_0_1_1_0(), "rule__ClassMatcherModifier__SortAssignment_1_0_1_1_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getCreationAssignment_1_0_1_2_0(), "rule__ClassMatcherModifier__CreationAssignment_1_0_1_2_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getDeletionAssignment_1_0_1_3_0(), "rule__ClassMatcherModifier__DeletionAssignment_1_0_1_3_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroupAssignment_1_0_2(), "rule__ClassMatcherModifier__GroupAssignment_1_0_2");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroupAssignment_1_1_1_0_0(), "rule__ClassMatcherModifier__GroupAssignment_1_1_1_0_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getSortAssignment_1_1_1_1_0(), "rule__ClassMatcherModifier__SortAssignment_1_1_1_1_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getCreationAssignment_1_1_1_2_0(), "rule__ClassMatcherModifier__CreationAssignment_1_1_1_2_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getDeletionAssignment_1_1_1_3_0(), "rule__ClassMatcherModifier__DeletionAssignment_1_1_1_3_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getFilterAssignment_1_1_2(), "rule__ClassMatcherModifier__FilterAssignment_1_1_2");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroupAssignment_1_2_1_0_0(), "rule__ClassMatcherModifier__GroupAssignment_1_2_1_0_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getFilterAssignment_1_2_1_1_0(), "rule__ClassMatcherModifier__FilterAssignment_1_2_1_1_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getCreationAssignment_1_2_1_2_0(), "rule__ClassMatcherModifier__CreationAssignment_1_2_1_2_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getDeletionAssignment_1_2_1_3_0(), "rule__ClassMatcherModifier__DeletionAssignment_1_2_1_3_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getSortAssignment_1_2_2(), "rule__ClassMatcherModifier__SortAssignment_1_2_2");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroupAssignment_1_3_1_0_0(), "rule__ClassMatcherModifier__GroupAssignment_1_3_1_0_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getFilterAssignment_1_3_1_1_0(), "rule__ClassMatcherModifier__FilterAssignment_1_3_1_1_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getSortAssignment_1_3_1_2_0(), "rule__ClassMatcherModifier__SortAssignment_1_3_1_2_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getDeletionAssignment_1_3_1_3_0(), "rule__ClassMatcherModifier__DeletionAssignment_1_3_1_3_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getCreationAssignment_1_3_2(), "rule__ClassMatcherModifier__CreationAssignment_1_3_2");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getGroupAssignment_1_4_1_0_0(), "rule__ClassMatcherModifier__GroupAssignment_1_4_1_0_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getFilterAssignment_1_4_1_1_0(), "rule__ClassMatcherModifier__FilterAssignment_1_4_1_1_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getSortAssignment_1_4_1_2_0(), "rule__ClassMatcherModifier__SortAssignment_1_4_1_2_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getCreationAssignment_1_4_1_3_0(), "rule__ClassMatcherModifier__CreationAssignment_1_4_1_3_0");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getDeletionAssignment_1_4_2(), "rule__ClassMatcherModifier__DeletionAssignment_1_4_2");
			builder.put(grammarAccess.getFeatureMappingAccess().getSrcFeaturesAssignment_0_0(), "rule__FeatureMapping__SrcFeaturesAssignment_0_0");
			builder.put(grammarAccess.getFeatureMappingAccess().getSrcClassesAssignment_0_1(), "rule__FeatureMapping__SrcClassesAssignment_0_1");
			builder.put(grammarAccess.getFeatureMappingAccess().getDirectionAssignment_1(), "rule__FeatureMapping__DirectionAssignment_1");
			builder.put(grammarAccess.getFeatureMappingAccess().getTrgFeaturesAssignment_2_0(), "rule__FeatureMapping__TrgFeaturesAssignment_2_0");
			builder.put(grammarAccess.getFeatureMappingAccess().getTrgClassesAssignment_2_1(), "rule__FeatureMapping__TrgClassesAssignment_2_1");
			builder.put(grammarAccess.getSrcMappingFeatureAccess().getFeatureAssignment_0(), "rule__SrcMappingFeature__FeatureAssignment_0");
			builder.put(grammarAccess.getSrcMappingFeatureAccess().getCorrAssignment_1_0(), "rule__SrcMappingFeature__CorrAssignment_1_0");
			builder.put(grammarAccess.getSrcMappingFeatureAccess().getFeatureAssignment_1_1(), "rule__SrcMappingFeature__FeatureAssignment_1_1");
			builder.put(grammarAccess.getSrcMappingFeatureAccess().getCorrsAssignment_1_3(), "rule__SrcMappingFeature__CorrsAssignment_1_3");
			builder.put(grammarAccess.getSrcMappingFeatureAccess().getCorrsAssignment_1_4_1(), "rule__SrcMappingFeature__CorrsAssignment_1_4_1");
			builder.put(grammarAccess.getTrgMappingFeatureAccess().getFeatureAssignment_0(), "rule__TrgMappingFeature__FeatureAssignment_0");
			builder.put(grammarAccess.getTrgMappingFeatureAccess().getCorrAssignment_1_0(), "rule__TrgMappingFeature__CorrAssignment_1_0");
			builder.put(grammarAccess.getTrgMappingFeatureAccess().getFeatureAssignment_1_1(), "rule__TrgMappingFeature__FeatureAssignment_1_1");
			builder.put(grammarAccess.getTrgMappingFeatureAccess().getCorrsAssignment_1_3(), "rule__TrgMappingFeature__CorrsAssignment_1_3");
			builder.put(grammarAccess.getTrgMappingFeatureAccess().getCorrsAssignment_1_4_1(), "rule__TrgMappingFeature__CorrsAssignment_1_4_1");
			builder.put(grammarAccess.getCorrespondenceAccess().getRuleAssignment_0(), "rule__Correspondence__RuleAssignment_0");
			builder.put(grammarAccess.getCorrespondenceAccess().getMatchersAssignment_1_1(), "rule__Correspondence__MatchersAssignment_1_1");
			builder.put(grammarAccess.getCorrespondenceAccess().getMatchersAssignment_1_2_1(), "rule__Correspondence__MatchersAssignment_1_2_1");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getUnorderedGroup_1_0_1(), "rule__ClassMatcherModifier__UnorderedGroup_1_0_1");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getUnorderedGroup_1_1_1(), "rule__ClassMatcherModifier__UnorderedGroup_1_1_1");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getUnorderedGroup_1_2_1(), "rule__ClassMatcherModifier__UnorderedGroup_1_2_1");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getUnorderedGroup_1_3_1(), "rule__ClassMatcherModifier__UnorderedGroup_1_3_1");
			builder.put(grammarAccess.getClassMatcherModifierAccess().getUnorderedGroup_1_4_1(), "rule__ClassMatcherModifier__UnorderedGroup_1_4_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private BXtendDSLGrammarAccess grammarAccess;

	@Override
	protected InternalBXtendDSLParser createParser() {
		InternalBXtendDSLParser result = new InternalBXtendDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected TokenSource createLexer(CharStream stream) {
		return new BXtendDSLTokenSource(super.createLexer(stream));
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_INDENTATION", "RULE_SL_COMMENT" };
	}

	public BXtendDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BXtendDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
